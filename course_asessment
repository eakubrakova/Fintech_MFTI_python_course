"""Данные по каждому модулю представлены в виде кортежей, состоящих из пяти элементов:

Кодовое название курса.
Название курса.
Средняя оценка модуля.
NESSA — это внутренняя метрика компании, показывающая качество модуля (измеряется от 0 до 100).
Количество оценок."

data = [
    ("FPW-2.0_D", "Бонус: Тренажер по HTML", 10, 100, 10),
    ("FPW-2.0", "Бонус: Тренажер по JavaScript", 9.2, 70, 180),
    ("FPW-2.0_D", "Бонус: Тренажер по React", 8.5, 66.67, 68),
    ("FPW-2.0", "Бонусный: IT в современном мире", 8.64, 83.74, 856),
    ("FPW-2.0", "Бонусный: Введение", 8.73, 56.24, 745),
    ("FPW-2.0", "Бонус: D1. Знакомство с Django (NEW)", 9.76, 95.24, 21),
    ("FPW-2.0_D", "Бонус: D2. Модели (NEW)", 9.44, 77.78, 18)
]

def filter_module(module):
    # Распаковываем кортеж на пять переменных
    code, name, avg_votes, nessa, count = module
    # Создаём условия 
    cond_1 = code == "FPW-2.0"
    cond_2 = nessa >= 70
    cond_3 = count > 50
    # Условия должны выполняться одновременно
    return cond_1 and cond_2 and cond_3
# для проверки выведем данные, подходящие под критерии фильтрации.
print(filter_module(module=("FPW-2.0", "Бонус: Тренажер по JavaScript", 9.2, 70, 180)))
""" Можнот фильтр записать в виде одной строки"""
lambda_filter_module = lambda x: (x[0] == "FPW-2.0") and (x[3] >= 70) and (x[4] > 50)
# Применяем эту функцию к каждому элементу списка (к каждому кортежу)
filtered_data = list(filter(lambda_filter_module, data))
# Смотрим, что получилось
print(filtered_data)
